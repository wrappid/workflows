name: Package Publish - CD

on:
  workflow_call:
    inputs:
      EMAIL_NOTIFY:
        required: true
        type: string
        default: "true"
      EMAIL_SENDER_NAME:
        required: false
        type: string
    secrets:
      PAT:
        required: true
      WRAPPID_PUBLISH_TOKEN
        required: true
## Below secrets are required if EMAIL_NOTIFY is TRUE
      EMAIL_SERVER_ADDRESS:
      EMAIL_SERVER_PORT:
      EMAIL_USER_ID:
      EMAIL_USER_PASSWORD:
      EMAIL_TO:
      EMAIL_CC:     ## Optional
      EMAIL_BCC:    ## Optional
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  package-publish:
    runs-on: ubuntu-latest
    name: Service Deploy
    outputs:
      tag-version: ${{ steps.current-tag.outputs.tag }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0
          
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/wrappid
          token: ${{ secrets.WRAPPID_PUBLISH_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          NODE_AUTH_TOKEN: ${{ secrets.WRAPPID_PUBLISH_TOKEN }}

      - name: Get Current Tag
        id: current-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found

      - name: Print received tag from action
        run: echo ${{ steps.current-tag.outputs.tag }}

      - name: Download latest release
        run: gh release download --pattern "wrappid*.tgz" -R wrappid/${{ github.event.repository.name }}

      - name: Publish package
        run: npm run publish


  call-send-email-deployed:
      needs: package-publish
      if: ${{ inputs.EMAIL_NOTIFY }} == true
      permissions: write-all
      uses: wrappid/workflows/.github/workflows/send-email-deploy.yml@main
      secrets:
        EMAIL_SERVER_ADDRESS: ${{ secrets.EMAIL_SERVER_ADDRESS }}
        EMAIL_SERVER_PORT: ${{ secrets.EMAIL_SERVER_PORT }}
        EMAIL_USER_ID: ${{ secrets.EMAIL_USER_ID }}
        EMAIL_USER_PASSWORD: ${{ secrets.EMAIL_USER_PASSWORD }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        EMAIL_CC: ${{ secrets.EMAIL_CC }}       ## Optional
        EMAIL_BCC: ${{ secrets.EMAIL_BCC }}     ## Optional
      with:
        tag-version: ${{ needs.package-publish.outputs.tag-version }}
        EMAIL_SENDER_NAME: ${{ inputs.EMAIL_SENDER_NAME }}